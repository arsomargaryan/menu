{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\im\\\\menu.am\\\\src\\\\RestaurantsComponents\\\\Meals\\\\RestaurantMealList.jsx\",\n  _s = $RefreshSig$();\nimport { RestaurantMealItem } from \"./RestaurantMealItem\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RestaurantMealList({\n  meals\n}) {\n  _s();\n  let start = 0;\n  let end = 4;\n  const [visibleMeals, setVisibleMeals] = useState(meals.slice(start, end));\n  const lastMealRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && entry.target === lastMealRef.current) {\n          start = start + 3;\n          end = end + 3;\n          const additionalMeals = meals.slice(start, end);\n          setVisibleMeals(prevMeals => [...prevMeals, ...additionalMeals]);\n        }\n      });\n    }, {\n      root: null,\n      rootMargin: '30px 0px 0px 0px',\n      threshold: 0.1\n    });\n    if (lastMealRef.current) {\n      observer.unobserve(lastMealRef.current);\n    }\n    return () => {\n      if (lastMealRef.current) {\n        observer.unobserve(lastMealRef.current);\n      }\n    };\n  }, [visibleMeals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: visibleMeals.map((el, index) => /*#__PURE__*/_jsxDEV(RestaurantMealItem, {\n      item: el,\n      meals: meals\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 44\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n}\n_s(RestaurantMealList, \"W7sjvZNn6y5opqZ+83huy4OnW10=\");\n_c = RestaurantMealList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantMealList\");","map":{"version":3,"names":["RestaurantMealItem","useEffect","useRef","useState","jsxDEV","_jsxDEV","RestaurantMealList","meals","_s","start","end","visibleMeals","setVisibleMeals","slice","lastMealRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","current","additionalMeals","prevMeals","root","rootMargin","threshold","unobserve","children","map","el","index","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/im/menu.am/src/RestaurantsComponents/Meals/RestaurantMealList.jsx"],"sourcesContent":["import {RestaurantMealItem} from \"./RestaurantMealItem\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\n\r\nexport function RestaurantMealList({meals}){\r\n    let start = 0;\r\n    let end = 4;\r\n    \r\n    const [visibleMeals, setVisibleMeals] = useState(meals.slice(start, end))\r\n    const lastMealRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries)=>{\r\n                entries.forEach((entry)=>{\r\n                    if(entry.isIntersecting && entry.target === lastMealRef.current){\r\n                        start = start + 3\r\n                        end = end + 3\r\n                        const additionalMeals = meals.slice(start,end)\r\n                        setVisibleMeals((prevMeals)=>[...prevMeals, ...additionalMeals])\r\n                    }\r\n                });\r\n            },\r\n            {\r\n                root: null,\r\n                rootMargin: '30px 0px 0px 0px',\r\n                threshold: 0.1,\r\n            }\r\n        );\r\n        if(lastMealRef.current){\r\n            observer.unobserve(lastMealRef.current)\r\n        }\r\n\r\n        return () =>{\r\n            if(lastMealRef.current){\r\n                observer.unobserve(lastMealRef.current)\r\n            }\r\n        };\r\n    }, [visibleMeals]);\r\n    return <div>\r\n        {\r\n            visibleMeals.map((el , index)=><RestaurantMealItem key={index} item={el} meals={meals} />)\r\n        }\r\n\r\n    </div>\r\n}"],"mappings":";;AAAA,SAAQA,kBAAkB,QAAO,sBAAsB;AACvD,SAAQC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,SAASC,kBAAkBA,CAAC;EAACC;AAAK,CAAC,EAAC;EAAAC,EAAA;EACvC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,CAAC;EAEX,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAACM,KAAK,CAACJ,KAAK,EAAEC,GAAG,CAAC,CAAC;EACzE,MAAMI,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ,MAAMc,QAAQ,GAAG,IAAIC,oBAAoB,CACpCC,OAAO,IAAG;MACPA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAG;QACrB,IAAGA,KAAK,CAACC,cAAc,IAAID,KAAK,CAACE,MAAM,KAAKP,WAAW,CAACQ,OAAO,EAAC;UAC5Db,KAAK,GAAGA,KAAK,GAAG,CAAC;UACjBC,GAAG,GAAGA,GAAG,GAAG,CAAC;UACb,MAAMa,eAAe,GAAGhB,KAAK,CAACM,KAAK,CAACJ,KAAK,EAACC,GAAG,CAAC;UAC9CE,eAAe,CAAEY,SAAS,IAAG,CAAC,GAAGA,SAAS,EAAE,GAAGD,eAAe,CAAC,CAAC;QACpE;MACJ,CAAC,CAAC;IACN,CAAC,EACD;MACIE,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,kBAAkB;MAC9BC,SAAS,EAAE;IACf,CACJ,CAAC;IACD,IAAGb,WAAW,CAACQ,OAAO,EAAC;MACnBP,QAAQ,CAACa,SAAS,CAACd,WAAW,CAACQ,OAAO,CAAC;IAC3C;IAEA,OAAO,MAAK;MACR,IAAGR,WAAW,CAACQ,OAAO,EAAC;QACnBP,QAAQ,CAACa,SAAS,CAACd,WAAW,CAACQ,OAAO,CAAC;MAC3C;IACJ,CAAC;EACL,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAClB,oBAAON,OAAA;IAAAwB,QAAA,EAEClB,YAAY,CAACmB,GAAG,CAAC,CAACC,EAAE,EAAGC,KAAK,kBAAG3B,OAAA,CAACL,kBAAkB;MAAaiC,IAAI,EAAEF,EAAG;MAACxB,KAAK,EAAEA;IAAM,GAA9ByB,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG7F,CAAC;AACV;AAAC7B,EAAA,CAzCeF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}