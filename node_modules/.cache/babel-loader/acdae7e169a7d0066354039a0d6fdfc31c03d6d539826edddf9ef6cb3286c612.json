{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\\\im\\\\menu.am\\\\src\\\\RestaurantsComponents\\\\Meals\\\\RestaurantMealList.jsx\",\n  _s = $RefreshSig$();\nimport { RestaurantMealItem } from \"./RestaurantMealItem\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RestaurantMealList({\n  meals\n}) {\n  _s();\n  let start = 0;\n  let end = 4;\n  const [visibleMeals, setVisibleMeals] = useState(meals.slice(start, end));\n  console.log(visibleMeals);\n\n  // const lastMealObserver = new IntersectionObserver(entries => {\n  //     const lastMeal = entries.at(-2)\n  //     if(!lastMeal.isIntersecting) return\n  //     loadNewMeals()\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: meals.map((el, index) => /*#__PURE__*/_jsxDEV(RestaurantMealItem, {\n      item: el\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n_s(RestaurantMealList, \"OoqTTrAaXNsOgurZfMgBaw9neZw=\");\n_c = RestaurantMealList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantMealList\");","map":{"version":3,"names":["RestaurantMealItem","useEffect","useRef","useState","jsxDEV","_jsxDEV","RestaurantMealList","meals","_s","start","end","visibleMeals","setVisibleMeals","slice","console","log","children","map","el","index","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/react/im/menu.am/src/RestaurantsComponents/Meals/RestaurantMealList.jsx"],"sourcesContent":["import {RestaurantMealItem} from \"./RestaurantMealItem\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\n\r\nexport function RestaurantMealList({meals}){\r\n\r\n    let start = 0;\r\n    let end = 4;\r\n\r\n    const [visibleMeals, setVisibleMeals] = useState(meals.slice(start,end))\r\n\r\n    console.log(visibleMeals)\r\n\r\n    // const lastMealObserver = new IntersectionObserver(entries => {\r\n    //     const lastMeal = entries.at(-2)\r\n    //     if(!lastMeal.isIntersecting) return\r\n    //     loadNewMeals()\r\n    // })\r\n\r\n\r\n    return <div>\r\n        {\r\n            meals.map((el , index)=><RestaurantMealItem key={index} item={el}/>)\r\n        }\r\n    </div>\r\n}"],"mappings":";;AAAA,SAAQA,kBAAkB,QAAO,sBAAsB;AACvD,SAAQC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,SAASC,kBAAkBA,CAAC;EAACC;AAAK,CAAC,EAAC;EAAAC,EAAA;EAEvC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,CAAC;EAEX,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAACM,KAAK,CAACJ,KAAK,EAACC,GAAG,CAAC,CAAC;EAExEI,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;;EAEzB;EACA;EACA;EACA;EACA;;EAGA,oBAAON,OAAA;IAAAW,QAAA,EAECT,KAAK,CAACU,GAAG,CAAC,CAACC,EAAE,EAAGC,KAAK,kBAAGd,OAAA,CAACL,kBAAkB;MAAaoB,IAAI,EAAEF;IAAG,GAAhBC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvE,CAAC;AACV;AAAChB,EAAA,CArBeF,kBAAkB;AAAAmB,EAAA,GAAlBnB,kBAAkB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}